openapi: 3.0.1
info:
  title: CIAM Authz
  description: This is the CIAM-Authz service based on the OpenAPI 2.0 specification.
  contact:
    email: ciam-authz@redhat.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
servers:
- url: /
tags:
- name: CheckPermission
- name: LicenseService
paths:
  /v1alpha/check:
    post:
      tags:
      - CheckPermission
      summary: Checks the permission and returns allowed (true) or not allowed (false)
      description: CheckPermission endpoint is used by the clients to determine if
        the given "subject" has the given permission "Operation" on a given "Resource"
      operationId: CheckPermission_CheckPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1alphaCheckPermissionRequest'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alphaCheckPermissionResponse'
              example:
              - 123
              - 34
              - 114
              - 101
              - 115
              - 117
              - 108
              - 116
              - 34
              - 58
              - 32
              - 116
              - 114
              - 117
              - 101
              - 44
              - 32
              - 34
              - 100
              - 101
              - 115
              - 99
              - 114
              - 105
              - 112
              - 116
              - 105
              - 111
              - 110
              - 34
              - 58
              - 32
              - 34
              - 34
              - 125
        "401":
          description: Returned when no valid identity information provided to a protected
            endpoint.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Returned when an unexpected error occurs during request processing.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
  /v1alpha/orgs/{orgId}/licenses/{serviceId}:
    get:
      tags:
      - LicenseService
      summary: Summarize a license.
      description: |
        Returns information about the license,  including the number of entitled seats (maximum assignable) and the current number of available seats.
      operationId: LicenseService_GetLicense
      parameters:
      - name: orgId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alphaGetLicenseResponse'
        "401":
          description: Returned when no valid identity information provided to a protected
            endpoint.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Returned when an unexpected error occurs during request processing.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
    post:
      tags:
      - LicenseService
      summary: Assign or unassign users to/from the license.
      description: |
        Assign or unassign users to or from the license.  Users assigned may access the service identified by serviceId as contracted with an organization (identified by orgId). Assigned users consume a limited number of seats in a license.
      operationId: LicenseService_ModifySeats
      parameters:
      - name: orgId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/licenses_serviceId_body'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alphaModifySeatsResponse'
        "401":
          description: Returned when no valid identity information provided to a protected
            endpoint.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Returned when an unexpected error occurs during request processing.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
      x-codegen-request-body-name: body
  /v1alpha/orgs/{orgId}/licenses/{serviceId}/seats:
    get:
      tags:
      - LicenseService
      summary: Gets user details with filters.
      description: Get details of users who are assigned to the license or available
        to be assigned.
      operationId: LicenseService_GetSeats
      parameters:
      - name: orgId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: includeUsers
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: assigned
          enum:
          - assigned
          - assignable
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1alphaGetSeatsResponse'
        "401":
          description: Returned when no valid identity information provided to a protected
            endpoint.
          content:
            application/json:
              schema:
                type: object
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
        "500":
          description: Returned when an unexpected error occurs during request processing.
          content:
            application/json:
              schema:
                type: object
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
components:
  schemas:
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        details:
          type: array
          items:
            $ref: '#/components/schemas/protobufAny'
        message:
          type: string
    v1alphaCheckPermissionRequest:
      type: object
      properties:
        operation:
          type: string
        resourceid:
          type: string
        resourcetype:
          type: string
        subject:
          type: string
    v1alphaCheckPermissionResponse:
      type: object
      properties:
        description:
          type: string
        result:
          type: boolean
    v1alphaGetLicenseResponse:
      type: object
      properties:
        seatsAvailable:
          type: integer
          format: int32
        seatsTotal:
          type: integer
          format: int32
    v1alphaGetSeatsResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/v1alphaGetSeatsUserRepresentation'
    v1alphaGetSeatsUserRepresentation:
      type: object
      properties:
        assigned:
          type: boolean
        displayName:
          type: string
        id:
          type: string
      description: "we may return more userinfo, this is a starting point."
    v1alphaModifySeatsResponse:
      type: object
    v1alphaSeatFilterType:
      type: string
      default: assigned
      enum:
      - assigned
      - assignable
    licenses_serviceId_body:
      type: object
      properties:
        assign:
          type: array
          items:
            type: string
        unassign:
          type: array
          items:
            type: string
      description: ModifySeatsRequest assuming we get the userId etc from the requester
        in the authorization header to validate if an "admin" can actually add licenses.
x-original-swagger-version: "2.0"
